"""init

Revision ID: 73e961c08fb3
Revises: 
Create Date: 2025-09-20 22:01:22.679169

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '73e961c08fb3'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chart_of_accounts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('account_code', sa.String(length=20), nullable=False),
    sa.Column('account_name', sa.String(length=255), nullable=False),
    sa.Column('account_type', sa.String(length=50), nullable=False),
    sa.Column('parent_account_id', sa.UUID(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chart_of_accounts_tenant_id'), 'chart_of_accounts', ['tenant_id'], unique=False)
    op.create_table('contacts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('gstin', sa.String(length=15), nullable=True),
    sa.Column('contact_type', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contacts_tenant_id'), 'contacts', ['tenant_id'], unique=False)
    op.create_table('products',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('sku', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('unit_price', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('hsn_code', sa.String(length=20), nullable=True),
    sa.Column('unit_of_measurement', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_products_tenant_id'), 'products', ['tenant_id'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.create_table('taxes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('tax_type', sa.String(length=20), nullable=False),
    sa.Column('rate', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_taxes_tenant_id'), 'taxes', ['tenant_id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('transaction_number', sa.String(length=50), nullable=False),
    sa.Column('transaction_type', sa.String(length=20), nullable=False),
    sa.Column('transaction_status', sa.String(length=20), nullable=False),
    sa.Column('transaction_date', sa.DateTime(), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('contact_id', sa.UUID(), nullable=False),
    sa.Column('reference', sa.String(length=100), nullable=True),
    sa.Column('subtotal', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('tax_amount', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('kafka_processed', sa.Boolean(), nullable=False),
    sa.Column('kafka_processed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_tenant_id'), 'transactions', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_transactions_transaction_number'), 'transactions', ['transaction_number'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('login_id', sa.String(length=100), nullable=False),
    sa.Column('email_id', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email_id'), 'users', ['email_id'], unique=True)
    op.create_index(op.f('ix_users_login_id'), 'users', ['login_id'], unique=True)
    op.create_index(op.f('ix_users_name'), 'users', ['name'], unique=False)
    op.create_index(op.f('ix_users_tenant_id'), 'users', ['tenant_id'], unique=False)
    op.create_table('journal_entries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('entry_number', sa.String(length=50), nullable=False),
    sa.Column('entry_date', sa.DateTime(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('transaction_id', sa.UUID(), nullable=True),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('debit_amount', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('credit_amount', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('contact_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['chart_of_accounts.id'], ),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_journal_entries_entry_number'), 'journal_entries', ['entry_number'], unique=False)
    op.create_index(op.f('ix_journal_entries_tenant_id'), 'journal_entries', ['tenant_id'], unique=False)
    op.create_table('transaction_lines',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('transaction_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=12, scale=4), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('tax_id', sa.UUID(), nullable=True),
    sa.Column('tax_rate', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('tax_amount', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('line_total', sa.Numeric(precision=14, scale=2), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['tax_id'], ['taxes.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transaction_lines_tenant_id'), 'transaction_lines', ['tenant_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transaction_lines_tenant_id'), table_name='transaction_lines')
    op.drop_table('transaction_lines')
    op.drop_index(op.f('ix_journal_entries_tenant_id'), table_name='journal_entries')
    op.drop_index(op.f('ix_journal_entries_entry_number'), table_name='journal_entries')
    op.drop_table('journal_entries')
    op.drop_index(op.f('ix_users_tenant_id'), table_name='users')
    op.drop_index(op.f('ix_users_name'), table_name='users')
    op.drop_index(op.f('ix_users_login_id'), table_name='users')
    op.drop_index(op.f('ix_users_email_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_transactions_transaction_number'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_tenant_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_taxes_tenant_id'), table_name='taxes')
    op.drop_table('taxes')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_products_tenant_id'), table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_contacts_tenant_id'), table_name='contacts')
    op.drop_table('contacts')
    op.drop_index(op.f('ix_chart_of_accounts_tenant_id'), table_name='chart_of_accounts')
    op.drop_table('chart_of_accounts')
    # ### end Alembic commands ###
